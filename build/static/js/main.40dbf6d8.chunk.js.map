{"version":3,"sources":["components/TodoItem.tsx","components/Todoes.tsx","models/todo.ts","components/NewTodo.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Todos.module.css","components/TodoItem.module.css","components/NewTodo.module.css"],"names":["TodoItem","props","onClick","onRemoveTodo","className","classes","item","text","Todoes","todos","items","map","bind","id","todo","todoText","this","Date","toISOString","NewTodo","todoInputTextRef","useRef","onSubmit","event","preventDefault","enteredText","current","value","trim","length","onAddTodo","form","htmlFor","ref","type","App","useState","setTodos","newTodo","Todo","prev","concat","todoId","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iOAWeA,EATwD,SACrEC,GAEA,OACE,oBAAIC,QAASD,EAAME,aAAcC,UAAWC,IAAQC,KAAK,SACtDL,EAAMM,MAGb,ECMeC,EAZgE,SAACP,GAC9E,OACE,cAAC,WAAQ,UACP,oBAAIG,UAAWC,IAAQI,MAAM,SAC1BR,EAAMS,MAAMC,KAAI,SAACL,GAAI,OACpB,cAAC,EAAQ,CAAeC,KAAMD,EAAKC,KAAMJ,aAAcF,EAAME,aAAaS,KAAK,KAAMN,EAAKO,KAA3EP,EAAKO,GAA6E,OAK3G,E,cCNeC,EARL,aAGR,WAAYC,GAAmB,yBAF/BF,QAAE,OACFN,UAAI,EAEFS,KAAKH,IAAK,IAAII,MAAOC,cACrBF,KAAKT,KAAOQ,CACd,I,gBCcaI,EAjBkD,SAAClB,GAChE,IAAMmB,EAAmBC,iBAAyB,MAQlD,OACE,uBAAMC,SARc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAcL,EAAiBM,QAASC,MACZ,IAA9BF,EAAYG,OAAOC,QACvB5B,EAAM6B,UAAUL,EAClB,EAEiCrB,UAAWC,IAAQ0B,KAAK,UACrD,uBAAOC,QAAQ,OAAM,uBACrB,uBAAOC,IAAKb,EAAkBc,KAAK,OAAOrB,GAAG,SAC7C,gDAGN,ECQesB,MAtBf,WACE,MAA0BC,mBAAiB,IAAG,mBAAvC3B,EAAK,KAAE4B,EAAQ,KAatB,OACE,gCACE,cAAC,EAAO,CAACP,UAbU,SAACf,GACtB,IAAMuB,EAAU,IAAIC,EAAKxB,GACzBsB,GAAS,SAACG,GACR,OAAOA,EAAKC,OAAOH,EACrB,GACF,IASI,cAAC,EAAM,CAACnC,aARc,SAACuC,GACzBL,GAAS,SAAAG,GACP,OAAOA,EAAKG,QAAO,SAAArC,GAAI,OAAIA,EAAKO,KAAM6B,CAAM,GAC9C,GACF,EAI6ChC,MAAOD,MAGtD,ECXemC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECNAQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SAM1Bb,G,oBCfAc,EAAOC,QAAU,CAAC,MAAQ,qB,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB","file":"static/js/main.40dbf6d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./TodoItem.module.css\";\r\nconst TodoItem: React.FC<{ text: string; onRemoveTodo: () => void }> = (\r\n  props\r\n) => {\r\n  return (\r\n    <li onClick={props.onRemoveTodo} className={classes.item}>\r\n      {props.text}\r\n    </li>\r\n  );\r\n};\r\nexport default TodoItem;\r\n","import React, { Fragment } from \"react\";\r\nimport todo from \"../models/todo\";\r\nimport classes from \"./Todos.module.css\";\r\nimport TodoItem from \"./TodoItem\";\r\nconst Todoes: React.FC<{ items: todo[]; onRemoveTodo: (id: string)=> void }> = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <ul className={classes.todos}>\r\n        {props.items.map((item) => (\r\n          <TodoItem key={item.id} text={item.text} onRemoveTodo={props.onRemoveTodo.bind(null, item.id)} />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Todoes;\r\n","class todo {\r\n  id: string;\r\n  text: string;\r\n  constructor(todoText: string) {\r\n    this.id = new Date().toISOString();\r\n    this.text = todoText;\r\n  }\r\n}\r\nexport default todo;\r\n","import { useRef } from \"react\";\r\n// import Todo from \"../models/todo\";\r\nimport classes from \"./NewTodo.module.css\";\r\nconst NewTodo: React.FC<{ onAddTodo: (text: string) => void }> = (props) => {\r\n  const todoInputTextRef = useRef<HTMLInputElement>(null);\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const enteredText = todoInputTextRef.current!.value;\r\n    if (enteredText.trim().length === 0) return;\r\n    props.onAddTodo(enteredText);\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.form}>\r\n      <label htmlFor=\"text\">Todo Text</label>\r\n      <input ref={todoInputTextRef} type=\"text\" id=\"text\" />\r\n      <button>Add todo</button>\r\n    </form>\r\n  );\r\n};\r\nexport default NewTodo;\r\n","import Todoes from \"./components/Todoes\";\nimport Todo from \"./models/todo\";\nimport NewTodo from \"./components/NewTodo\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  // const todos = [new todo(\"Learn React\"), new todo(\"Lrean typeScript\")];\n  const addTodoHandler = (todoText: string) => {\n    const newTodo = new Todo(todoText);\n    setTodos((prev) => {\n      return prev.concat(newTodo);\n    });\n  };\n  const removeTodoHandler = (todoId: string) =>{\n    setTodos(prev => {\n      return prev.filter(item => item.id !==todoId);\n    })\n  }\n  return (\n    <div>\n      <NewTodo onAddTodo={addTodoHandler} />\n      <Todoes onRemoveTodo={removeTodoHandler} items={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"Todos_todos__1ge4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2ByPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__8Tuv6\"};"],"sourceRoot":""}